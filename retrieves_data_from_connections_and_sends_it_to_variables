from airflow import DAG

from datetime import timedelta

from airflow.utils.dates import days_ago

from airflow.operators.python import PythonOperator

from airflow.hooks.base_hook import BaseHook

from airflow.models import Variable

import pandas as pd


 

def get_host(**context):

    host = BaseHook.get_connection('custom_conn_id').host

    context['ti'].xcom_push(key = 'host', value = host)


 

def get_login(**context):

    login = BaseHook.get_connection('custom_conn_id').login

    context['ti'].xcom_push(key = 'login', value = login)


 

def get_password(**context):

    password = BaseHook.get_connection('custom_conn_id').password

    context['ti'].xcom_push(key = 'password', value = password)


 

def to_json_and_variable(**context):

    host = context['ti'].xcom_pull(key = 'host', task_ids = 'get_host')

    login = context['ti'].xcom_pull(key = 'login', task_ids = 'get_login')

    password = context['ti'].xcom_pull(key = 'password', task_ids = 'get_password')

    df = pd.DataFrame({'host': [host], 'login': [login], 'password': [password]})

    json_file = df.to_json(orient='records')

    Variable.set('host_log_pass', json_file)

    with open('host_login_pass.json', 'w') as f:

      f.write(json_file)


 

dag = DAG('dag', schedule_interval = '@daily', start_date = days_ago(1))

 

t1 = PythonOperator(task_id = 'get_host', python_callable = get_host, dag = dag)

t2 = PythonOperator(task_id = 'get_login', python_callable = get_login, dag = dag)

t3 = PythonOperator(task_id = 'get_password', python_callable = get_password, dag = dag)

t4 = PythonOperator(task_id = 'to_json_and_variable', python_callable = to_json_and_variable, dag = dag)

 

[t1, t2, t3] >> t4
